{{define "title"}}User Submissions{{end}}
{{define "head"}}
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.14.2/dist/bootstrap-table.min.css">
    <style>
        .id-col {
            font-weight: 700;
        }
        .btn-group-sm > .btn {
            padding: .25rem .5rem;
            font-size: .75rem;
            line-height: 1;
            border-radius: .2rem;
            min-width: 75px;
        }
    </style>
{{end}}
{{define "content"}}

    <h2 class="display-4 mb-3">{{.Assignment.Name}} submissions</h2>
    <h5>{{.SubmissionCount}} / {{len .Students}} submitted</h5>
    <h6>Reviews per student: {{.Assignment.Reviewers.Int64}}</h6>

    <table class="table table-hover table-sm" id="table" data-toggle="table" data-pagination="true" data-search="true" data-page-size="100">
        <thead class="thead-light">
        <tr>
            <th data-sortable="true" scope="col">#</th>
            <th data-sortable="true" scope="col">Name</th>
            <th data-sortable="true" scope="col">Email</th>
            <th data-sortable="true" scope="col">Submitted</th>
            <th scope="col">Actions</th>
            <th data-sortable="true" scope="col">Reviews Done</th>
        </tr>
        </thead>
        <tbody>
        {{$A := .Assignment}}
        {{range .Students}}
            {{if not .User.Teacher}}
                <tr{{if not .Submitted}} class="table-danger"{{else}} class="table-success"{{end}}>
                    <td class="id-col">{{.User.ID}}</td>
                    <td>{{.User.Name}}</td>
                    <td><a href="mailto:{{.User.EmailStudent}}">{{.User.EmailStudent}}</a></td>
                    <td>{{if .Submitted}}{{SORTABLE_TIME .SubmittedTime}}{{end}}</td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            {{if .Submitted}}
                                <a href="/admin/assignment/{{$A.ID}}/submission/{{.User.ID}}" class="btn btn-outline-primary">Preview</a>
                                <a href="/admin/assignment/{{$A.ID}}/submission/{{.User.ID}}/update" class="btn btn-outline-warning">Update</a>
                                {{if .Reviewed}}
                                    <a href="/admin/assignment/{{$A.ID}}/review/{{.User.ID}}" class="btn btn-outline-info">Reviews</a>
                                {{end}}
                                <button type="button" onclick="deleteSubmission({{$A.ID}}, {{.User.ID}})" class="btn btn-outline-danger">Delete</button>
                            {{else}}
                                <a href="/admin/assignment/{{$A.ID}}/submission/{{.User.ID}}/create" class="btn btn-outline-success">Create</a>
                            {{end}}
                        </div>
                    </td>
                    <td>
                        {{.ReviewsDone}} / {{$A.Reviewers.Int64}}
                    </td>
                </tr>
            {{end}}
        {{end}}
        </tbody>
    </table>
{{end}}
{{define "foot"}}
    <script src="https://unpkg.com/bootstrap-table@1.14.2/dist/bootstrap-table.min.js"></script>
    <script>
        function deleteSubmission(assignment, user) {
            if (window.confirm('Are you sure you want to delete this submission?')) {
                let url = `/admin/assignment/${parseInt(assignment)}/submission/${parseInt(user)}`;
                fetch(url, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        'assignment_id': parseInt(assignment),
                        'user_id': parseInt(user),
                    })
                })
                .then(response => {
                    return response.json();
                })
                .then(json => {
                    window.alert(json.message);

                    if (json.code === 200) {
                        location.reload();
                    } else {

                    }
                })
                .catch(error => {
                    window.alert(error);
                });
            }
        }
    </script>
{{end}}